{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","index","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACE,uBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMhB,UACE,6BAAKD,IACL,uBACEQ,KAAK,OACLC,MAAOT,EACPU,SApBqB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,cAyB3BZ,EAAYe,UAAY,CACtBd,cAAee,IAAUC,KAAKC,Y,YChCnBC,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEtC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfN,EAFe,iDAEiCO,UAAUF,GAF3C,+DAGHG,MAAMR,GAHH,cAGfS,EAHe,gBAIAA,EAAIC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVhB,kBAcdY,GAdc,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFV,SAACA,GAAc,IAAD,EACfzB,mBAAS,CACjC+B,KAAM,GACNO,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAazC,OAPAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACtCT,KAAMY,EACNL,SAAS,SAEV,CAACb,IAEGc,EDHyBK,CAAcnB,GAAjCU,EARwB,EAQ9BJ,KAAcO,EARgB,EAQhBA,QAIrB,OACE,qCACE,oBAAIjB,UAAU,oCAAd,SAAmDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAEDA,GADCA,EAAIhB,aEpBR2B,EAAe,WAAM,MAGI7C,mBAAS,CAAC,cAHd,mBAGzB8C,EAHyB,KAGb/C,EAHa,KAShC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG+C,EAAWb,KAAI,SAACR,EAAUsB,GAAX,OACd,cAAC,EAAD,CAEEtB,SAAUA,GADLsB,Y,MCfjBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d7524abb.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n  const [inputValue, setInputValue] = useState('')\n\n  const handleInpuntChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats])\n      setInputValue('')\n    }\n\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>{inputValue}</h1>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInpuntChange}\n      />\n    </form>\n  )\n}\n\nAddCategory.prototype = {\n  setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n  return (\n    <div className=\"card animate__animated animate__bounce\">\n      <img src={url} alt={title}/>\n      <p>{title}</p>\n    </div>\n  )\n}\n","export const getGifs = async (category) => {\n\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=LDynTthG5cRtlWm9JUoE5SABLbeInJMP`\n  const res = await fetch(url)\n  const {data} = await res.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url\n    }\n  })\n\n  return gifs\n}","// import React, { useEffect, useState } from 'react'\nimport React from 'react'\nimport { GifGridItem } from './GifGridItem'\nimport { useFetchGifts } from '../hooks/useFetchGifs'\n\nexport const GifGrid = ({category}) => {\n\n  // const [images, setImages] = useState([])\n\n  // useEffect(() =>  {\n  //   getGifts(category).then(imgs => setImages(imgs))\n  // }, [category])\n\n  const {data: images, loading} = useFetchGifts(category)\n\n\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__bounce\">{category}</h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => {\n          return <GifGridItem\n            key={img.id}\n            {...img}\n          />\n        })}\n      </div>\n    </>\n\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifts = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category).then(imgs => setState({\n      data: imgs,\n      loading: false\n    }))\n  }, [category])\n\n  return state\n}","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n  const [categories, setCategories] = useState(['Samurai X'])\n\n  /* const handleAdd = () => {\n    setCategories([...categories, 'Ranma 1/2'])\n  } */\n\n  return(\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr/>\n      <ol>\n        {categories.map((category, index) => (\n          <GifGrid\n            key={index}\n            category={category}/>\n        ))}\n      </ol>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}